name: CI & Release

on:
  push:
    branches: [main, next]

jobs:
  test:
    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.3]
        laravel: [12.*]
        stability: [prefer-stable]
        include:
          - laravel: 12.*
            testbench: 10.*
            carbon: 3.*

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Composer authentication
        run: |
          echo '{"http-basic": {"github.com": {"username":"mortezamasumi", "password":"${{secrets.AUTH_JSON}}"}}}' > $HOME/.composer/auth.json

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Execute tests
        run: vendor/bin/pest --ci

  release:
    name: Release
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: |
          if [ ! -f package.json ]; then
            echo '{"name": "project", "version": "1.0.0", "private": true}' > package.json
          fi
          npm install --no-audit --silent \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/github \
            conventional-changelog-conventionalcommits
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run semantic-release
        run: npx semantic-release --branches main,next --extends @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
